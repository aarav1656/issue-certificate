{"ast":null,"code":"import _regeneratorRuntime from\"/home/aarav/Desktop/tut/certificate2/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/home/aarav/Desktop/tut/certificate2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import axios from\"axios\";//Paste Your API's Key and Secret here\nvar pinataApiKey=\"11154bf7be1e39173cf5\";var pinataApiSecret=\"7a35cc5d76e19eb0aa7740fe7e3ca0ae811e772895666e2d9391de0806fcce23\";var pinataApiUrl=\"https://api.pinata.cloud/pinning/pinFileToIPFS\";var pinataHeaders={headers:{\"Content-Type\":\"multipart/form-data\",pinata_api_key:pinataApiKey,pinata_secret_api_key:pinataApiSecret}};export function uploadToIPFS(_x){return _uploadToIPFS.apply(this,arguments);}function _uploadToIPFS(){_uploadToIPFS=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(file){var formData,response,ipfsHash;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:formData=new FormData();formData.append(\"file\",file);_context.prev=2;_context.next=5;return axios.post(pinataApiUrl,formData,pinataHeaders);case 5:response=_context.sent;ipfsHash=response.data.IpfsHash;return _context.abrupt(\"return\",\"https://gateway.pinata.cloud/ipfs/\".concat(ipfsHash));case 10:_context.prev=10;_context.t0=_context[\"catch\"](2);console.error(\"Error uploading file to Pinata:\",_context.t0);throw _context.t0;case 14:case\"end\":return _context.stop();}},_callee,null,[[2,10]]);}));return _uploadToIPFS.apply(this,arguments);}","map":{"version":3,"names":["axios","pinataApiKey","pinataApiSecret","pinataApiUrl","pinataHeaders","headers","pinata_api_key","pinata_secret_api_key","uploadToIPFS","_x","_uploadToIPFS","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","file","formData","response","ipfsHash","wrap","_callee$","_context","prev","next","FormData","append","post","sent","data","IpfsHash","abrupt","concat","t0","console","error","stop"],"sources":["/home/aarav/Desktop/tut/certificate2/src/ipfsUploader.js"],"sourcesContent":["import axios from \"axios\";\n\n//Paste Your API's Key and Secret here\nconst pinataApiKey = \"11154bf7be1e39173cf5\";\nconst pinataApiSecret = \"7a35cc5d76e19eb0aa7740fe7e3ca0ae811e772895666e2d9391de0806fcce23\";\n\nconst pinataApiUrl = \"https://api.pinata.cloud/pinning/pinFileToIPFS\";\n\nconst pinataHeaders = {\n  headers: {\n    \"Content-Type\": \"multipart/form-data\",\n    pinata_api_key: pinataApiKey,\n    pinata_secret_api_key: pinataApiSecret,\n  },\n};\n\nexport async function uploadToIPFS(file) {\n  const formData = new FormData();\n  formData.append(\"file\", file);\n\n  try {\n    const response = await axios.post(pinataApiUrl, formData, pinataHeaders);\n    const ipfsHash = response.data.IpfsHash;\n    return `https://gateway.pinata.cloud/ipfs/${ipfsHash}`;\n  } catch (error) {\n    console.error(\"Error uploading file to Pinata:\", error);\n    throw error;\n  }\n}\n"],"mappings":"oQAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB;AACA,GAAM,CAAAC,YAAY,CAAG,sBAAsB,CAC3C,GAAM,CAAAC,eAAe,CAAG,kEAAkE,CAE1F,GAAM,CAAAC,YAAY,CAAG,gDAAgD,CAErE,GAAM,CAAAC,aAAa,CAAG,CACpBC,OAAO,CAAE,CACP,cAAc,CAAE,qBAAqB,CACrCC,cAAc,CAAEL,YAAY,CAC5BM,qBAAqB,CAAEL,eACzB,CACF,CAAC,CAED,eAAsB,CAAAM,YAAYA,CAAAC,EAAA,SAAAC,aAAA,CAAAC,KAAA,MAAAC,SAAA,GAYjC,SAAAF,cAAA,EAAAA,aAAA,CAAAG,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAZM,SAAAC,QAA4BC,IAAI,MAAAC,QAAA,CAAAC,QAAA,CAAAC,QAAA,QAAAN,mBAAA,GAAAO,IAAA,UAAAC,SAAAC,QAAA,iBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SAC/BP,QAAQ,CAAG,GAAI,CAAAQ,QAAQ,EAAE,CAC/BR,QAAQ,CAACS,MAAM,CAAC,MAAM,CAAEV,IAAI,CAAC,CAACM,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA,SAGL,CAAAzB,KAAK,CAAC4B,IAAI,CAACzB,YAAY,CAAEe,QAAQ,CAAEd,aAAa,CAAC,QAAlEe,QAAQ,CAAAI,QAAA,CAAAM,IAAA,CACRT,QAAQ,CAAGD,QAAQ,CAACW,IAAI,CAACC,QAAQ,QAAAR,QAAA,CAAAS,MAAA,+CAAAC,MAAA,CACKb,QAAQ,WAAAG,QAAA,CAAAC,IAAA,IAAAD,QAAA,CAAAW,EAAA,CAAAX,QAAA,aAEpDY,OAAO,CAACC,KAAK,CAAC,iCAAiC,CAAAb,QAAA,CAAAW,EAAA,CAAQ,CAAC,MAAAX,QAAA,CAAAW,EAAA,0BAAAX,QAAA,CAAAc,IAAA,MAAArB,OAAA,iBAG3D,UAAAN,aAAA,CAAAC,KAAA,MAAAC,SAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}