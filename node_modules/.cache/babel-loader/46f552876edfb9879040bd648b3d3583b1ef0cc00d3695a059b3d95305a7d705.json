{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst Parser = require(\"../Parser\");\nconst ConstDependency = require(\"../dependencies/ConstDependency\");\nconst CssExportDependency = require(\"../dependencies/CssExportDependency\");\nconst CssImportDependency = require(\"../dependencies/CssImportDependency\");\nconst CssLocalIdentifierDependency = require(\"../dependencies/CssLocalIdentifierDependency\");\nconst CssSelfLocalIdentifierDependency = require(\"../dependencies/CssSelfLocalIdentifierDependency\");\nconst CssUrlDependency = require(\"../dependencies/CssUrlDependency\");\nconst StaticExportsDependency = require(\"../dependencies/StaticExportsDependency\");\nconst walkCssTokens = require(\"./walkCssTokens\");\n\n/** @typedef {import(\"../Parser\").ParserState} ParserState */\n/** @typedef {import(\"../Parser\").PreparsedAst} PreparsedAst */\n\nconst CC_LEFT_CURLY = \"{\".charCodeAt(0);\nconst CC_RIGHT_CURLY = \"}\".charCodeAt(0);\nconst CC_COLON = \":\".charCodeAt(0);\nconst CC_SLASH = \"/\".charCodeAt(0);\nconst CC_SEMICOLON = \";\".charCodeAt(0);\nconst cssUnescape = str => {\n  return str.replace(/\\\\([0-9a-fA-F]{1,6}[ \\t\\n\\r\\f]?|[\\s\\S])/g, match => {\n    if (match.length > 2) {\n      return String.fromCharCode(parseInt(match.slice(1).trim(), 16));\n    } else {\n      return match[1];\n    }\n  });\n};\nclass LocConverter {\n  constructor(input) {\n    this._input = input;\n    this.line = 1;\n    this.column = 0;\n    this.pos = 0;\n  }\n  get(pos) {\n    if (this.pos !== pos) {\n      if (this.pos < pos) {\n        const str = this._input.slice(this.pos, pos);\n        let i = str.lastIndexOf(\"\\n\");\n        if (i === -1) {\n          this.column += str.length;\n        } else {\n          this.column = str.length - i - 1;\n          this.line++;\n          while (i > 0 && (i = str.lastIndexOf(\"\\n\", i - 1)) !== -1) this.line++;\n        }\n      } else {\n        let i = this._input.lastIndexOf(\"\\n\", this.pos);\n        while (i >= pos) {\n          this.line--;\n          i = i > 0 ? this._input.lastIndexOf(\"\\n\", i - 1) : -1;\n        }\n        this.column = pos - i;\n      }\n      this.pos = pos;\n    }\n    return this;\n  }\n}\nconst CSS_MODE_TOP_LEVEL = 0;\nconst CSS_MODE_IN_RULE = 1;\nconst CSS_MODE_IN_LOCAL_RULE = 2;\nconst CSS_MODE_AT_IMPORT_EXPECT_URL = 3;\n// TODO implement layer and supports for @import\nconst CSS_MODE_AT_IMPORT_EXPECT_SUPPORTS = 4;\nconst CSS_MODE_AT_IMPORT_EXPECT_MEDIA = 5;\nconst CSS_MODE_AT_OTHER = 6;\nconst explainMode = mode => {\n  switch (mode) {\n    case CSS_MODE_TOP_LEVEL:\n      return \"parsing top level css\";\n    case CSS_MODE_IN_RULE:\n      return \"parsing css rule content (global)\";\n    case CSS_MODE_IN_LOCAL_RULE:\n      return \"parsing css rule content (local)\";\n    case CSS_MODE_AT_IMPORT_EXPECT_URL:\n      return \"parsing @import (expecting url)\";\n    case CSS_MODE_AT_IMPORT_EXPECT_SUPPORTS:\n      return \"parsing @import (expecting optionally supports or media query)\";\n    case CSS_MODE_AT_IMPORT_EXPECT_MEDIA:\n      return \"parsing @import (expecting optionally media query)\";\n    case CSS_MODE_AT_OTHER:\n      return \"parsing at-rule\";\n    default:\n      return mode;\n  }\n};\nclass CssParser extends Parser {\n  constructor() {\n    let {\n      allowPseudoBlocks = true,\n      allowModeSwitch = true,\n      defaultMode = \"global\"\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super();\n    this.allowPseudoBlocks = allowPseudoBlocks;\n    this.allowModeSwitch = allowModeSwitch;\n    this.defaultMode = defaultMode;\n  }\n\n  /**\n   * @param {string | Buffer | PreparsedAst} source the source to parse\n   * @param {ParserState} state the parser state\n   * @returns {ParserState} the parser state\n   */\n  parse(source, state) {\n    if (Buffer.isBuffer(source)) {\n      source = source.toString(\"utf-8\");\n    } else if (typeof source === \"object\") {\n      throw new Error(\"webpackAst is unexpected for the CssParser\");\n    }\n    if (source[0] === \"\\ufeff\") {\n      source = source.slice(1);\n    }\n    const module = state.module;\n    const declaredCssVariables = new Set();\n    const locConverter = new LocConverter(source);\n    let mode = CSS_MODE_TOP_LEVEL;\n    let modePos = 0;\n    let modeNestingLevel = 0;\n    let modeData = undefined;\n    let singleClassSelector = undefined;\n    let lastIdentifier = undefined;\n    const modeStack = [];\n    let awaitRightParenthesis = false;\n    const isTopLevelLocal = () => modeData === \"local\" || this.defaultMode === \"local\" && modeData === undefined;\n    const eatWhiteLine = (input, pos) => {\n      for (;;) {\n        const cc = input.charCodeAt(pos);\n        if (cc === 32 || cc === 9) {\n          pos++;\n          continue;\n        }\n        if (cc === 10) pos++;\n        break;\n      }\n      return pos;\n    };\n    const eatUntil = chars => {\n      const charCodes = Array.from({\n        length: chars.length\n      }, (_, i) => chars.charCodeAt(i));\n      const arr = Array.from({\n        length: charCodes.reduce((a, b) => Math.max(a, b), 0) + 1\n      }, () => false);\n      charCodes.forEach(cc => arr[cc] = true);\n      return (input, pos) => {\n        for (;;) {\n          const cc = input.charCodeAt(pos);\n          if (cc < arr.length && arr[cc]) {\n            return pos;\n          }\n          pos++;\n          if (pos === input.length) return pos;\n        }\n      };\n    };\n    const eatText = (input, pos, eater) => {\n      let text = \"\";\n      for (;;) {\n        if (input.charCodeAt(pos) === CC_SLASH) {\n          const newPos = walkCssTokens.eatComments(input, pos);\n          if (pos !== newPos) {\n            pos = newPos;\n            if (pos === input.length) break;\n          } else {\n            text += \"/\";\n            pos++;\n            if (pos === input.length) break;\n          }\n        }\n        const newPos = eater(input, pos);\n        if (pos !== newPos) {\n          text += input.slice(pos, newPos);\n          pos = newPos;\n        } else {\n          break;\n        }\n        if (pos === input.length) break;\n      }\n      return [pos, text.trimEnd()];\n    };\n    const eatExportName = eatUntil(\":};/\");\n    const eatExportValue = eatUntil(\"};/\");\n    const parseExports = (input, pos) => {\n      pos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n      const cc = input.charCodeAt(pos);\n      if (cc !== CC_LEFT_CURLY) throw new Error(`Unexpected ${input[pos]} at ${pos} during parsing of ':export' (expected '{')`);\n      pos++;\n      pos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n      for (;;) {\n        if (input.charCodeAt(pos) === CC_RIGHT_CURLY) break;\n        pos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n        if (pos === input.length) return pos;\n        let start = pos;\n        let name;\n        [pos, name] = eatText(input, pos, eatExportName);\n        if (pos === input.length) return pos;\n        if (input.charCodeAt(pos) !== CC_COLON) {\n          throw new Error(`Unexpected ${input[pos]} at ${pos} during parsing of export name in ':export' (expected ':')`);\n        }\n        pos++;\n        if (pos === input.length) return pos;\n        pos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n        if (pos === input.length) return pos;\n        let value;\n        [pos, value] = eatText(input, pos, eatExportValue);\n        if (pos === input.length) return pos;\n        const cc = input.charCodeAt(pos);\n        if (cc === CC_SEMICOLON) {\n          pos++;\n          if (pos === input.length) return pos;\n          pos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n          if (pos === input.length) return pos;\n        } else if (cc !== CC_RIGHT_CURLY) {\n          throw new Error(`Unexpected ${input[pos]} at ${pos} during parsing of export value in ':export' (expected ';' or '}')`);\n        }\n        const dep = new CssExportDependency(name, value);\n        const {\n          line: sl,\n          column: sc\n        } = locConverter.get(start);\n        const {\n          line: el,\n          column: ec\n        } = locConverter.get(pos);\n        dep.setLoc(sl, sc, el, ec);\n        module.addDependency(dep);\n      }\n      pos++;\n      if (pos === input.length) return pos;\n      pos = eatWhiteLine(input, pos);\n      return pos;\n    };\n    const eatPropertyName = eatUntil(\":{};\");\n    const processLocalDeclaration = (input, pos) => {\n      modeData = undefined;\n      const start = pos;\n      pos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n      const propertyNameStart = pos;\n      const [propertyNameEnd, propertyName] = eatText(input, pos, eatPropertyName);\n      if (input.charCodeAt(propertyNameEnd) !== CC_COLON) return start;\n      pos = propertyNameEnd + 1;\n      if (propertyName.startsWith(\"--\")) {\n        // CSS Variable\n        const {\n          line: sl,\n          column: sc\n        } = locConverter.get(propertyNameStart);\n        const {\n          line: el,\n          column: ec\n        } = locConverter.get(propertyNameEnd);\n        const name = propertyName.slice(2);\n        const dep = new CssLocalIdentifierDependency(name, [propertyNameStart, propertyNameEnd], \"--\");\n        dep.setLoc(sl, sc, el, ec);\n        module.addDependency(dep);\n        declaredCssVariables.add(name);\n      } else if (propertyName === \"animation-name\" || propertyName === \"animation\") {\n        modeData = \"animation\";\n        lastIdentifier = undefined;\n      }\n      return pos;\n    };\n    const processDeclarationValueDone = (input, pos) => {\n      if (modeData === \"animation\" && lastIdentifier) {\n        const {\n          line: sl,\n          column: sc\n        } = locConverter.get(lastIdentifier[0]);\n        const {\n          line: el,\n          column: ec\n        } = locConverter.get(lastIdentifier[1]);\n        const name = input.slice(lastIdentifier[0], lastIdentifier[1]);\n        const dep = new CssSelfLocalIdentifierDependency(name, lastIdentifier);\n        dep.setLoc(sl, sc, el, ec);\n        module.addDependency(dep);\n      }\n    };\n    const eatAtRuleNested = eatUntil(\"{};/\");\n    const eatKeyframes = eatUntil(\"{};/\");\n    const eatNameInVar = eatUntil(\",)};/\");\n    walkCssTokens(source, {\n      isSelector: () => {\n        return mode !== CSS_MODE_IN_RULE && mode !== CSS_MODE_IN_LOCAL_RULE;\n      },\n      url: (input, start, end, contentStart, contentEnd) => {\n        const value = cssUnescape(input.slice(contentStart, contentEnd));\n        switch (mode) {\n          case CSS_MODE_AT_IMPORT_EXPECT_URL:\n            {\n              modeData.url = value;\n              mode = CSS_MODE_AT_IMPORT_EXPECT_SUPPORTS;\n              break;\n            }\n          case CSS_MODE_AT_IMPORT_EXPECT_SUPPORTS:\n          case CSS_MODE_AT_IMPORT_EXPECT_MEDIA:\n            throw new Error(`Unexpected ${input.slice(start, end)} at ${start} during ${explainMode(mode)}`);\n          default:\n            {\n              const dep = new CssUrlDependency(value, [start, end], \"url\");\n              const {\n                line: sl,\n                column: sc\n              } = locConverter.get(start);\n              const {\n                line: el,\n                column: ec\n              } = locConverter.get(end);\n              dep.setLoc(sl, sc, el, ec);\n              module.addDependency(dep);\n              module.addCodeGenerationDependency(dep);\n              break;\n            }\n        }\n        return end;\n      },\n      string: (input, start, end) => {\n        switch (mode) {\n          case CSS_MODE_AT_IMPORT_EXPECT_URL:\n            {\n              modeData.url = cssUnescape(input.slice(start + 1, end - 1));\n              mode = CSS_MODE_AT_IMPORT_EXPECT_SUPPORTS;\n              break;\n            }\n        }\n        return end;\n      },\n      atKeyword: (input, start, end) => {\n        const name = input.slice(start, end);\n        if (name === \"@namespace\") {\n          throw new Error(\"@namespace is not supported in bundled CSS\");\n        }\n        if (name === \"@import\") {\n          if (mode !== CSS_MODE_TOP_LEVEL) {\n            throw new Error(`Unexpected @import at ${start} during ${explainMode(mode)}`);\n          }\n          mode = CSS_MODE_AT_IMPORT_EXPECT_URL;\n          modePos = end;\n          modeData = {\n            start: start,\n            url: undefined,\n            supports: undefined\n          };\n        }\n        if (name === \"@keyframes\") {\n          let pos = end;\n          pos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n          if (pos === input.length) return pos;\n          const [newPos, name] = eatText(input, pos, eatKeyframes);\n          const {\n            line: sl,\n            column: sc\n          } = locConverter.get(pos);\n          const {\n            line: el,\n            column: ec\n          } = locConverter.get(newPos);\n          const dep = new CssLocalIdentifierDependency(name, [pos, newPos]);\n          dep.setLoc(sl, sc, el, ec);\n          module.addDependency(dep);\n          pos = newPos;\n          if (pos === input.length) return pos;\n          if (input.charCodeAt(pos) !== CC_LEFT_CURLY) {\n            throw new Error(`Unexpected ${input[pos]} at ${pos} during parsing of @keyframes (expected '{')`);\n          }\n          mode = CSS_MODE_IN_LOCAL_RULE;\n          modeNestingLevel = 1;\n          return pos + 1;\n        }\n        if (name === \"@media\" || name === \"@supports\") {\n          let pos = end;\n          const [newPos] = eatText(input, pos, eatAtRuleNested);\n          pos = newPos;\n          if (pos === input.length) return pos;\n          if (input.charCodeAt(pos) !== CC_LEFT_CURLY) {\n            throw new Error(`Unexpected ${input[pos]} at ${pos} during parsing of @media or @supports (expected '{')`);\n          }\n          return pos + 1;\n        }\n        return end;\n      },\n      semicolon: (input, start, end) => {\n        switch (mode) {\n          case CSS_MODE_AT_IMPORT_EXPECT_URL:\n            throw new Error(`Expected URL for @import at ${start}`);\n          case CSS_MODE_AT_IMPORT_EXPECT_MEDIA:\n          case CSS_MODE_AT_IMPORT_EXPECT_SUPPORTS:\n            {\n              const {\n                line: sl,\n                column: sc\n              } = locConverter.get(modeData.start);\n              const {\n                line: el,\n                column: ec\n              } = locConverter.get(end);\n              end = eatWhiteLine(input, end);\n              const media = input.slice(modePos, start).trim();\n              const dep = new CssImportDependency(modeData.url, [modeData.start, end], modeData.supports, media);\n              dep.setLoc(sl, sc, el, ec);\n              module.addDependency(dep);\n              break;\n            }\n          case CSS_MODE_IN_LOCAL_RULE:\n            {\n              processDeclarationValueDone(input, start);\n              return processLocalDeclaration(input, end);\n            }\n          case CSS_MODE_IN_RULE:\n            {\n              return end;\n            }\n        }\n        mode = CSS_MODE_TOP_LEVEL;\n        modeData = undefined;\n        singleClassSelector = undefined;\n        return end;\n      },\n      leftCurlyBracket: (input, start, end) => {\n        switch (mode) {\n          case CSS_MODE_TOP_LEVEL:\n            mode = isTopLevelLocal() ? CSS_MODE_IN_LOCAL_RULE : CSS_MODE_IN_RULE;\n            modeNestingLevel = 1;\n            if (mode === CSS_MODE_IN_LOCAL_RULE) return processLocalDeclaration(input, end);\n            break;\n          case CSS_MODE_IN_RULE:\n          case CSS_MODE_IN_LOCAL_RULE:\n            modeNestingLevel++;\n            break;\n        }\n        return end;\n      },\n      rightCurlyBracket: (input, start, end) => {\n        switch (mode) {\n          case CSS_MODE_IN_LOCAL_RULE:\n            processDeclarationValueDone(input, start);\n          /* falls through */\n          case CSS_MODE_IN_RULE:\n            if (--modeNestingLevel === 0) {\n              mode = CSS_MODE_TOP_LEVEL;\n              modeData = undefined;\n              singleClassSelector = undefined;\n            }\n            break;\n        }\n        return end;\n      },\n      id: (input, start, end) => {\n        singleClassSelector = false;\n        switch (mode) {\n          case CSS_MODE_TOP_LEVEL:\n            if (isTopLevelLocal()) {\n              const name = input.slice(start + 1, end);\n              const dep = new CssLocalIdentifierDependency(name, [start + 1, end]);\n              const {\n                line: sl,\n                column: sc\n              } = locConverter.get(start);\n              const {\n                line: el,\n                column: ec\n              } = locConverter.get(end);\n              dep.setLoc(sl, sc, el, ec);\n              module.addDependency(dep);\n            }\n            break;\n        }\n        return end;\n      },\n      identifier: (input, start, end) => {\n        singleClassSelector = false;\n        switch (mode) {\n          case CSS_MODE_IN_LOCAL_RULE:\n            if (modeData === \"animation\") {\n              lastIdentifier = [start, end];\n            }\n            break;\n        }\n        return end;\n      },\n      class: (input, start, end) => {\n        switch (mode) {\n          case CSS_MODE_TOP_LEVEL:\n            {\n              if (isTopLevelLocal()) {\n                const name = input.slice(start + 1, end);\n                const dep = new CssLocalIdentifierDependency(name, [start + 1, end]);\n                const {\n                  line: sl,\n                  column: sc\n                } = locConverter.get(start);\n                const {\n                  line: el,\n                  column: ec\n                } = locConverter.get(end);\n                dep.setLoc(sl, sc, el, ec);\n                module.addDependency(dep);\n                if (singleClassSelector === undefined) singleClassSelector = name;\n              } else {\n                singleClassSelector = false;\n              }\n              break;\n            }\n        }\n        return end;\n      },\n      leftParenthesis: (input, start, end) => {\n        switch (mode) {\n          case CSS_MODE_TOP_LEVEL:\n            {\n              modeStack.push(false);\n              break;\n            }\n        }\n        return end;\n      },\n      rightParenthesis: (input, start, end) => {\n        switch (mode) {\n          case CSS_MODE_TOP_LEVEL:\n            {\n              if (awaitRightParenthesis) {\n                awaitRightParenthesis = false;\n              }\n              const newModeData = modeStack.pop();\n              if (newModeData !== false) {\n                modeData = newModeData;\n                const dep = new ConstDependency(\"\", [start, end]);\n                module.addPresentationalDependency(dep);\n              }\n              break;\n            }\n        }\n        return end;\n      },\n      pseudoClass: (input, start, end) => {\n        singleClassSelector = false;\n        switch (mode) {\n          case CSS_MODE_TOP_LEVEL:\n            {\n              const name = input.slice(start, end);\n              if (this.allowModeSwitch && name === \":global\") {\n                modeData = \"global\";\n                const dep = new ConstDependency(\"\", [start, end]);\n                module.addPresentationalDependency(dep);\n              } else if (this.allowModeSwitch && name === \":local\") {\n                modeData = \"local\";\n                const dep = new ConstDependency(\"\", [start, end]);\n                module.addPresentationalDependency(dep);\n              } else if (this.allowPseudoBlocks && name === \":export\") {\n                const pos = parseExports(input, end);\n                const dep = new ConstDependency(\"\", [start, pos]);\n                module.addPresentationalDependency(dep);\n                return pos;\n              }\n              break;\n            }\n        }\n        return end;\n      },\n      pseudoFunction: (input, start, end) => {\n        switch (mode) {\n          case CSS_MODE_TOP_LEVEL:\n            {\n              const name = input.slice(start, end - 1);\n              if (this.allowModeSwitch && name === \":global\") {\n                modeStack.push(modeData);\n                modeData = \"global\";\n                const dep = new ConstDependency(\"\", [start, end]);\n                module.addPresentationalDependency(dep);\n              } else if (this.allowModeSwitch && name === \":local\") {\n                modeStack.push(modeData);\n                modeData = \"local\";\n                const dep = new ConstDependency(\"\", [start, end]);\n                module.addPresentationalDependency(dep);\n              } else {\n                awaitRightParenthesis = true;\n                modeStack.push(false);\n              }\n              break;\n            }\n        }\n        return end;\n      },\n      function: (input, start, end) => {\n        switch (mode) {\n          case CSS_MODE_IN_LOCAL_RULE:\n            {\n              const name = input.slice(start, end - 1);\n              if (name === \"var\") {\n                let pos = walkCssTokens.eatWhitespaceAndComments(input, end);\n                if (pos === input.length) return pos;\n                const [newPos, name] = eatText(input, pos, eatNameInVar);\n                if (!name.startsWith(\"--\")) return end;\n                const {\n                  line: sl,\n                  column: sc\n                } = locConverter.get(pos);\n                const {\n                  line: el,\n                  column: ec\n                } = locConverter.get(newPos);\n                const dep = new CssSelfLocalIdentifierDependency(name.slice(2), [pos, newPos], \"--\", declaredCssVariables);\n                dep.setLoc(sl, sc, el, ec);\n                module.addDependency(dep);\n                return newPos;\n              }\n              break;\n            }\n        }\n        return end;\n      },\n      comma: (input, start, end) => {\n        switch (mode) {\n          case CSS_MODE_TOP_LEVEL:\n            if (!awaitRightParenthesis) {\n              modeData = undefined;\n              modeStack.length = 0;\n            }\n            break;\n          case CSS_MODE_IN_LOCAL_RULE:\n            processDeclarationValueDone(input, start);\n            break;\n        }\n        return end;\n      }\n    });\n    module.buildInfo.strict = true;\n    module.buildMeta.exportsType = \"namespace\";\n    module.addDependency(new StaticExportsDependency([], true));\n    return state;\n  }\n}\nmodule.exports = CssParser;","map":{"version":3,"names":["Parser","require","ConstDependency","CssExportDependency","CssImportDependency","CssLocalIdentifierDependency","CssSelfLocalIdentifierDependency","CssUrlDependency","StaticExportsDependency","walkCssTokens","CC_LEFT_CURLY","charCodeAt","CC_RIGHT_CURLY","CC_COLON","CC_SLASH","CC_SEMICOLON","cssUnescape","str","replace","match","length","String","fromCharCode","parseInt","slice","trim","LocConverter","constructor","input","_input","line","column","pos","get","i","lastIndexOf","CSS_MODE_TOP_LEVEL","CSS_MODE_IN_RULE","CSS_MODE_IN_LOCAL_RULE","CSS_MODE_AT_IMPORT_EXPECT_URL","CSS_MODE_AT_IMPORT_EXPECT_SUPPORTS","CSS_MODE_AT_IMPORT_EXPECT_MEDIA","CSS_MODE_AT_OTHER","explainMode","mode","CssParser","allowPseudoBlocks","allowModeSwitch","defaultMode","arguments","undefined","parse","source","state","Buffer","isBuffer","toString","Error","module","declaredCssVariables","Set","locConverter","modePos","modeNestingLevel","modeData","singleClassSelector","lastIdentifier","modeStack","awaitRightParenthesis","isTopLevelLocal","eatWhiteLine","cc","eatUntil","chars","charCodes","Array","from","_","arr","reduce","a","b","Math","max","forEach","eatText","eater","text","newPos","eatComments","trimEnd","eatExportName","eatExportValue","parseExports","eatWhitespaceAndComments","start","name","value","dep","sl","sc","el","ec","setLoc","addDependency","eatPropertyName","processLocalDeclaration","propertyNameStart","propertyNameEnd","propertyName","startsWith","add","processDeclarationValueDone","eatAtRuleNested","eatKeyframes","eatNameInVar","isSelector","url","end","contentStart","contentEnd","addCodeGenerationDependency","string","atKeyword","supports","semicolon","media","leftCurlyBracket","rightCurlyBracket","id","identifier","class","leftParenthesis","push","rightParenthesis","newModeData","pop","addPresentationalDependency","pseudoClass","pseudoFunction","function","comma","buildInfo","strict","buildMeta","exportsType","exports"],"sources":["/home/aarav/Desktop/tut/certificate2/node_modules/webpack/lib/css/CssParser.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst Parser = require(\"../Parser\");\nconst ConstDependency = require(\"../dependencies/ConstDependency\");\nconst CssExportDependency = require(\"../dependencies/CssExportDependency\");\nconst CssImportDependency = require(\"../dependencies/CssImportDependency\");\nconst CssLocalIdentifierDependency = require(\"../dependencies/CssLocalIdentifierDependency\");\nconst CssSelfLocalIdentifierDependency = require(\"../dependencies/CssSelfLocalIdentifierDependency\");\nconst CssUrlDependency = require(\"../dependencies/CssUrlDependency\");\nconst StaticExportsDependency = require(\"../dependencies/StaticExportsDependency\");\nconst walkCssTokens = require(\"./walkCssTokens\");\n\n/** @typedef {import(\"../Parser\").ParserState} ParserState */\n/** @typedef {import(\"../Parser\").PreparsedAst} PreparsedAst */\n\nconst CC_LEFT_CURLY = \"{\".charCodeAt(0);\nconst CC_RIGHT_CURLY = \"}\".charCodeAt(0);\nconst CC_COLON = \":\".charCodeAt(0);\nconst CC_SLASH = \"/\".charCodeAt(0);\nconst CC_SEMICOLON = \";\".charCodeAt(0);\n\nconst cssUnescape = str => {\n\treturn str.replace(/\\\\([0-9a-fA-F]{1,6}[ \\t\\n\\r\\f]?|[\\s\\S])/g, match => {\n\t\tif (match.length > 2) {\n\t\t\treturn String.fromCharCode(parseInt(match.slice(1).trim(), 16));\n\t\t} else {\n\t\t\treturn match[1];\n\t\t}\n\t});\n};\n\nclass LocConverter {\n\tconstructor(input) {\n\t\tthis._input = input;\n\t\tthis.line = 1;\n\t\tthis.column = 0;\n\t\tthis.pos = 0;\n\t}\n\n\tget(pos) {\n\t\tif (this.pos !== pos) {\n\t\t\tif (this.pos < pos) {\n\t\t\t\tconst str = this._input.slice(this.pos, pos);\n\t\t\t\tlet i = str.lastIndexOf(\"\\n\");\n\t\t\t\tif (i === -1) {\n\t\t\t\t\tthis.column += str.length;\n\t\t\t\t} else {\n\t\t\t\t\tthis.column = str.length - i - 1;\n\t\t\t\t\tthis.line++;\n\t\t\t\t\twhile (i > 0 && (i = str.lastIndexOf(\"\\n\", i - 1)) !== -1)\n\t\t\t\t\t\tthis.line++;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlet i = this._input.lastIndexOf(\"\\n\", this.pos);\n\t\t\t\twhile (i >= pos) {\n\t\t\t\t\tthis.line--;\n\t\t\t\t\ti = i > 0 ? this._input.lastIndexOf(\"\\n\", i - 1) : -1;\n\t\t\t\t}\n\t\t\t\tthis.column = pos - i;\n\t\t\t}\n\t\t\tthis.pos = pos;\n\t\t}\n\t\treturn this;\n\t}\n}\n\nconst CSS_MODE_TOP_LEVEL = 0;\nconst CSS_MODE_IN_RULE = 1;\nconst CSS_MODE_IN_LOCAL_RULE = 2;\nconst CSS_MODE_AT_IMPORT_EXPECT_URL = 3;\n// TODO implement layer and supports for @import\nconst CSS_MODE_AT_IMPORT_EXPECT_SUPPORTS = 4;\nconst CSS_MODE_AT_IMPORT_EXPECT_MEDIA = 5;\nconst CSS_MODE_AT_OTHER = 6;\n\nconst explainMode = mode => {\n\tswitch (mode) {\n\t\tcase CSS_MODE_TOP_LEVEL:\n\t\t\treturn \"parsing top level css\";\n\t\tcase CSS_MODE_IN_RULE:\n\t\t\treturn \"parsing css rule content (global)\";\n\t\tcase CSS_MODE_IN_LOCAL_RULE:\n\t\t\treturn \"parsing css rule content (local)\";\n\t\tcase CSS_MODE_AT_IMPORT_EXPECT_URL:\n\t\t\treturn \"parsing @import (expecting url)\";\n\t\tcase CSS_MODE_AT_IMPORT_EXPECT_SUPPORTS:\n\t\t\treturn \"parsing @import (expecting optionally supports or media query)\";\n\t\tcase CSS_MODE_AT_IMPORT_EXPECT_MEDIA:\n\t\t\treturn \"parsing @import (expecting optionally media query)\";\n\t\tcase CSS_MODE_AT_OTHER:\n\t\t\treturn \"parsing at-rule\";\n\t\tdefault:\n\t\t\treturn mode;\n\t}\n};\n\nclass CssParser extends Parser {\n\tconstructor({\n\t\tallowPseudoBlocks = true,\n\t\tallowModeSwitch = true,\n\t\tdefaultMode = \"global\"\n\t} = {}) {\n\t\tsuper();\n\t\tthis.allowPseudoBlocks = allowPseudoBlocks;\n\t\tthis.allowModeSwitch = allowModeSwitch;\n\t\tthis.defaultMode = defaultMode;\n\t}\n\n\t/**\n\t * @param {string | Buffer | PreparsedAst} source the source to parse\n\t * @param {ParserState} state the parser state\n\t * @returns {ParserState} the parser state\n\t */\n\tparse(source, state) {\n\t\tif (Buffer.isBuffer(source)) {\n\t\t\tsource = source.toString(\"utf-8\");\n\t\t} else if (typeof source === \"object\") {\n\t\t\tthrow new Error(\"webpackAst is unexpected for the CssParser\");\n\t\t}\n\t\tif (source[0] === \"\\ufeff\") {\n\t\t\tsource = source.slice(1);\n\t\t}\n\n\t\tconst module = state.module;\n\n\t\tconst declaredCssVariables = new Set();\n\n\t\tconst locConverter = new LocConverter(source);\n\t\tlet mode = CSS_MODE_TOP_LEVEL;\n\t\tlet modePos = 0;\n\t\tlet modeNestingLevel = 0;\n\t\tlet modeData = undefined;\n\t\tlet singleClassSelector = undefined;\n\t\tlet lastIdentifier = undefined;\n\t\tconst modeStack = [];\n\t\tlet awaitRightParenthesis = false;\n\t\tconst isTopLevelLocal = () =>\n\t\t\tmodeData === \"local\" ||\n\t\t\t(this.defaultMode === \"local\" && modeData === undefined);\n\t\tconst eatWhiteLine = (input, pos) => {\n\t\t\tfor (;;) {\n\t\t\t\tconst cc = input.charCodeAt(pos);\n\t\t\t\tif (cc === 32 || cc === 9) {\n\t\t\t\t\tpos++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (cc === 10) pos++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn pos;\n\t\t};\n\t\tconst eatUntil = chars => {\n\t\t\tconst charCodes = Array.from({ length: chars.length }, (_, i) =>\n\t\t\t\tchars.charCodeAt(i)\n\t\t\t);\n\t\t\tconst arr = Array.from(\n\t\t\t\t{ length: charCodes.reduce((a, b) => Math.max(a, b), 0) + 1 },\n\t\t\t\t() => false\n\t\t\t);\n\t\t\tcharCodes.forEach(cc => (arr[cc] = true));\n\t\t\treturn (input, pos) => {\n\t\t\t\tfor (;;) {\n\t\t\t\t\tconst cc = input.charCodeAt(pos);\n\t\t\t\t\tif (cc < arr.length && arr[cc]) {\n\t\t\t\t\t\treturn pos;\n\t\t\t\t\t}\n\t\t\t\t\tpos++;\n\t\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t\tconst eatText = (input, pos, eater) => {\n\t\t\tlet text = \"\";\n\t\t\tfor (;;) {\n\t\t\t\tif (input.charCodeAt(pos) === CC_SLASH) {\n\t\t\t\t\tconst newPos = walkCssTokens.eatComments(input, pos);\n\t\t\t\t\tif (pos !== newPos) {\n\t\t\t\t\t\tpos = newPos;\n\t\t\t\t\t\tif (pos === input.length) break;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttext += \"/\";\n\t\t\t\t\t\tpos++;\n\t\t\t\t\t\tif (pos === input.length) break;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst newPos = eater(input, pos);\n\t\t\t\tif (pos !== newPos) {\n\t\t\t\t\ttext += input.slice(pos, newPos);\n\t\t\t\t\tpos = newPos;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (pos === input.length) break;\n\t\t\t}\n\t\t\treturn [pos, text.trimEnd()];\n\t\t};\n\t\tconst eatExportName = eatUntil(\":};/\");\n\t\tconst eatExportValue = eatUntil(\"};/\");\n\t\tconst parseExports = (input, pos) => {\n\t\t\tpos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n\t\t\tconst cc = input.charCodeAt(pos);\n\t\t\tif (cc !== CC_LEFT_CURLY)\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`Unexpected ${input[pos]} at ${pos} during parsing of ':export' (expected '{')`\n\t\t\t\t);\n\t\t\tpos++;\n\t\t\tpos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n\t\t\tfor (;;) {\n\t\t\t\tif (input.charCodeAt(pos) === CC_RIGHT_CURLY) break;\n\t\t\t\tpos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\tlet start = pos;\n\t\t\t\tlet name;\n\t\t\t\t[pos, name] = eatText(input, pos, eatExportName);\n\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\tif (input.charCodeAt(pos) !== CC_COLON) {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t`Unexpected ${input[pos]} at ${pos} during parsing of export name in ':export' (expected ':')`\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tpos++;\n\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\tpos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\tlet value;\n\t\t\t\t[pos, value] = eatText(input, pos, eatExportValue);\n\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\tconst cc = input.charCodeAt(pos);\n\t\t\t\tif (cc === CC_SEMICOLON) {\n\t\t\t\t\tpos++;\n\t\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\t\tpos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n\t\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\t} else if (cc !== CC_RIGHT_CURLY) {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t`Unexpected ${input[pos]} at ${pos} during parsing of export value in ':export' (expected ';' or '}')`\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tconst dep = new CssExportDependency(name, value);\n\t\t\t\tconst { line: sl, column: sc } = locConverter.get(start);\n\t\t\t\tconst { line: el, column: ec } = locConverter.get(pos);\n\t\t\t\tdep.setLoc(sl, sc, el, ec);\n\t\t\t\tmodule.addDependency(dep);\n\t\t\t}\n\t\t\tpos++;\n\t\t\tif (pos === input.length) return pos;\n\t\t\tpos = eatWhiteLine(input, pos);\n\t\t\treturn pos;\n\t\t};\n\t\tconst eatPropertyName = eatUntil(\":{};\");\n\t\tconst processLocalDeclaration = (input, pos) => {\n\t\t\tmodeData = undefined;\n\t\t\tconst start = pos;\n\t\t\tpos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n\t\t\tconst propertyNameStart = pos;\n\t\t\tconst [propertyNameEnd, propertyName] = eatText(\n\t\t\t\tinput,\n\t\t\t\tpos,\n\t\t\t\teatPropertyName\n\t\t\t);\n\t\t\tif (input.charCodeAt(propertyNameEnd) !== CC_COLON) return start;\n\t\t\tpos = propertyNameEnd + 1;\n\t\t\tif (propertyName.startsWith(\"--\")) {\n\t\t\t\t// CSS Variable\n\t\t\t\tconst { line: sl, column: sc } = locConverter.get(propertyNameStart);\n\t\t\t\tconst { line: el, column: ec } = locConverter.get(propertyNameEnd);\n\t\t\t\tconst name = propertyName.slice(2);\n\t\t\t\tconst dep = new CssLocalIdentifierDependency(\n\t\t\t\t\tname,\n\t\t\t\t\t[propertyNameStart, propertyNameEnd],\n\t\t\t\t\t\"--\"\n\t\t\t\t);\n\t\t\t\tdep.setLoc(sl, sc, el, ec);\n\t\t\t\tmodule.addDependency(dep);\n\t\t\t\tdeclaredCssVariables.add(name);\n\t\t\t} else if (\n\t\t\t\tpropertyName === \"animation-name\" ||\n\t\t\t\tpropertyName === \"animation\"\n\t\t\t) {\n\t\t\t\tmodeData = \"animation\";\n\t\t\t\tlastIdentifier = undefined;\n\t\t\t}\n\t\t\treturn pos;\n\t\t};\n\t\tconst processDeclarationValueDone = (input, pos) => {\n\t\t\tif (modeData === \"animation\" && lastIdentifier) {\n\t\t\t\tconst { line: sl, column: sc } = locConverter.get(lastIdentifier[0]);\n\t\t\t\tconst { line: el, column: ec } = locConverter.get(lastIdentifier[1]);\n\t\t\t\tconst name = input.slice(lastIdentifier[0], lastIdentifier[1]);\n\t\t\t\tconst dep = new CssSelfLocalIdentifierDependency(name, lastIdentifier);\n\t\t\t\tdep.setLoc(sl, sc, el, ec);\n\t\t\t\tmodule.addDependency(dep);\n\t\t\t}\n\t\t};\n\t\tconst eatAtRuleNested = eatUntil(\"{};/\");\n\t\tconst eatKeyframes = eatUntil(\"{};/\");\n\t\tconst eatNameInVar = eatUntil(\",)};/\");\n\t\twalkCssTokens(source, {\n\t\t\tisSelector: () => {\n\t\t\t\treturn mode !== CSS_MODE_IN_RULE && mode !== CSS_MODE_IN_LOCAL_RULE;\n\t\t\t},\n\t\t\turl: (input, start, end, contentStart, contentEnd) => {\n\t\t\t\tconst value = cssUnescape(input.slice(contentStart, contentEnd));\n\t\t\t\tswitch (mode) {\n\t\t\t\t\tcase CSS_MODE_AT_IMPORT_EXPECT_URL: {\n\t\t\t\t\t\tmodeData.url = value;\n\t\t\t\t\t\tmode = CSS_MODE_AT_IMPORT_EXPECT_SUPPORTS;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase CSS_MODE_AT_IMPORT_EXPECT_SUPPORTS:\n\t\t\t\t\tcase CSS_MODE_AT_IMPORT_EXPECT_MEDIA:\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t`Unexpected ${input.slice(\n\t\t\t\t\t\t\t\tstart,\n\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\t)} at ${start} during ${explainMode(mode)}`\n\t\t\t\t\t\t);\n\t\t\t\t\tdefault: {\n\t\t\t\t\t\tconst dep = new CssUrlDependency(value, [start, end], \"url\");\n\t\t\t\t\t\tconst { line: sl, column: sc } = locConverter.get(start);\n\t\t\t\t\t\tconst { line: el, column: ec } = locConverter.get(end);\n\t\t\t\t\t\tdep.setLoc(sl, sc, el, ec);\n\t\t\t\t\t\tmodule.addDependency(dep);\n\t\t\t\t\t\tmodule.addCodeGenerationDependency(dep);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tstring: (input, start, end) => {\n\t\t\t\tswitch (mode) {\n\t\t\t\t\tcase CSS_MODE_AT_IMPORT_EXPECT_URL: {\n\t\t\t\t\t\tmodeData.url = cssUnescape(input.slice(start + 1, end - 1));\n\t\t\t\t\t\tmode = CSS_MODE_AT_IMPORT_EXPECT_SUPPORTS;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tatKeyword: (input, start, end) => {\n\t\t\t\tconst name = input.slice(start, end);\n\t\t\t\tif (name === \"@namespace\") {\n\t\t\t\t\tthrow new Error(\"@namespace is not supported in bundled CSS\");\n\t\t\t\t}\n\t\t\t\tif (name === \"@import\") {\n\t\t\t\t\tif (mode !== CSS_MODE_TOP_LEVEL) {\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t`Unexpected @import at ${start} during ${explainMode(mode)}`\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tmode = CSS_MODE_AT_IMPORT_EXPECT_URL;\n\t\t\t\t\tmodePos = end;\n\t\t\t\t\tmodeData = {\n\t\t\t\t\t\tstart: start,\n\t\t\t\t\t\turl: undefined,\n\t\t\t\t\t\tsupports: undefined\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tif (name === \"@keyframes\") {\n\t\t\t\t\tlet pos = end;\n\t\t\t\t\tpos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n\t\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\t\tconst [newPos, name] = eatText(input, pos, eatKeyframes);\n\t\t\t\t\tconst { line: sl, column: sc } = locConverter.get(pos);\n\t\t\t\t\tconst { line: el, column: ec } = locConverter.get(newPos);\n\t\t\t\t\tconst dep = new CssLocalIdentifierDependency(name, [pos, newPos]);\n\t\t\t\t\tdep.setLoc(sl, sc, el, ec);\n\t\t\t\t\tmodule.addDependency(dep);\n\t\t\t\t\tpos = newPos;\n\t\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\t\tif (input.charCodeAt(pos) !== CC_LEFT_CURLY) {\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t`Unexpected ${input[pos]} at ${pos} during parsing of @keyframes (expected '{')`\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tmode = CSS_MODE_IN_LOCAL_RULE;\n\t\t\t\t\tmodeNestingLevel = 1;\n\t\t\t\t\treturn pos + 1;\n\t\t\t\t}\n\t\t\t\tif (name === \"@media\" || name === \"@supports\") {\n\t\t\t\t\tlet pos = end;\n\t\t\t\t\tconst [newPos] = eatText(input, pos, eatAtRuleNested);\n\t\t\t\t\tpos = newPos;\n\t\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\t\tif (input.charCodeAt(pos) !== CC_LEFT_CURLY) {\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t`Unexpected ${input[pos]} at ${pos} during parsing of @media or @supports (expected '{')`\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\treturn pos + 1;\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tsemicolon: (input, start, end) => {\n\t\t\t\tswitch (mode) {\n\t\t\t\t\tcase CSS_MODE_AT_IMPORT_EXPECT_URL:\n\t\t\t\t\t\tthrow new Error(`Expected URL for @import at ${start}`);\n\t\t\t\t\tcase CSS_MODE_AT_IMPORT_EXPECT_MEDIA:\n\t\t\t\t\tcase CSS_MODE_AT_IMPORT_EXPECT_SUPPORTS: {\n\t\t\t\t\t\tconst { line: sl, column: sc } = locConverter.get(modeData.start);\n\t\t\t\t\t\tconst { line: el, column: ec } = locConverter.get(end);\n\t\t\t\t\t\tend = eatWhiteLine(input, end);\n\t\t\t\t\t\tconst media = input.slice(modePos, start).trim();\n\t\t\t\t\t\tconst dep = new CssImportDependency(\n\t\t\t\t\t\t\tmodeData.url,\n\t\t\t\t\t\t\t[modeData.start, end],\n\t\t\t\t\t\t\tmodeData.supports,\n\t\t\t\t\t\t\tmedia\n\t\t\t\t\t\t);\n\t\t\t\t\t\tdep.setLoc(sl, sc, el, ec);\n\t\t\t\t\t\tmodule.addDependency(dep);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase CSS_MODE_IN_LOCAL_RULE: {\n\t\t\t\t\t\tprocessDeclarationValueDone(input, start);\n\t\t\t\t\t\treturn processLocalDeclaration(input, end);\n\t\t\t\t\t}\n\t\t\t\t\tcase CSS_MODE_IN_RULE: {\n\t\t\t\t\t\treturn end;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tmode = CSS_MODE_TOP_LEVEL;\n\t\t\t\tmodeData = undefined;\n\t\t\t\tsingleClassSelector = undefined;\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tleftCurlyBracket: (input, start, end) => {\n\t\t\t\tswitch (mode) {\n\t\t\t\t\tcase CSS_MODE_TOP_LEVEL:\n\t\t\t\t\t\tmode = isTopLevelLocal()\n\t\t\t\t\t\t\t? CSS_MODE_IN_LOCAL_RULE\n\t\t\t\t\t\t\t: CSS_MODE_IN_RULE;\n\t\t\t\t\t\tmodeNestingLevel = 1;\n\t\t\t\t\t\tif (mode === CSS_MODE_IN_LOCAL_RULE)\n\t\t\t\t\t\t\treturn processLocalDeclaration(input, end);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CSS_MODE_IN_RULE:\n\t\t\t\t\tcase CSS_MODE_IN_LOCAL_RULE:\n\t\t\t\t\t\tmodeNestingLevel++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\trightCurlyBracket: (input, start, end) => {\n\t\t\t\tswitch (mode) {\n\t\t\t\t\tcase CSS_MODE_IN_LOCAL_RULE:\n\t\t\t\t\t\tprocessDeclarationValueDone(input, start);\n\t\t\t\t\t/* falls through */\n\t\t\t\t\tcase CSS_MODE_IN_RULE:\n\t\t\t\t\t\tif (--modeNestingLevel === 0) {\n\t\t\t\t\t\t\tmode = CSS_MODE_TOP_LEVEL;\n\t\t\t\t\t\t\tmodeData = undefined;\n\t\t\t\t\t\t\tsingleClassSelector = undefined;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tid: (input, start, end) => {\n\t\t\t\tsingleClassSelector = false;\n\t\t\t\tswitch (mode) {\n\t\t\t\t\tcase CSS_MODE_TOP_LEVEL:\n\t\t\t\t\t\tif (isTopLevelLocal()) {\n\t\t\t\t\t\t\tconst name = input.slice(start + 1, end);\n\t\t\t\t\t\t\tconst dep = new CssLocalIdentifierDependency(name, [\n\t\t\t\t\t\t\t\tstart + 1,\n\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\tconst { line: sl, column: sc } = locConverter.get(start);\n\t\t\t\t\t\t\tconst { line: el, column: ec } = locConverter.get(end);\n\t\t\t\t\t\t\tdep.setLoc(sl, sc, el, ec);\n\t\t\t\t\t\t\tmodule.addDependency(dep);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tidentifier: (input, start, end) => {\n\t\t\t\tsingleClassSelector = false;\n\t\t\t\tswitch (mode) {\n\t\t\t\t\tcase CSS_MODE_IN_LOCAL_RULE:\n\t\t\t\t\t\tif (modeData === \"animation\") {\n\t\t\t\t\t\t\tlastIdentifier = [start, end];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tclass: (input, start, end) => {\n\t\t\t\tswitch (mode) {\n\t\t\t\t\tcase CSS_MODE_TOP_LEVEL: {\n\t\t\t\t\t\tif (isTopLevelLocal()) {\n\t\t\t\t\t\t\tconst name = input.slice(start + 1, end);\n\t\t\t\t\t\t\tconst dep = new CssLocalIdentifierDependency(name, [\n\t\t\t\t\t\t\t\tstart + 1,\n\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\tconst { line: sl, column: sc } = locConverter.get(start);\n\t\t\t\t\t\t\tconst { line: el, column: ec } = locConverter.get(end);\n\t\t\t\t\t\t\tdep.setLoc(sl, sc, el, ec);\n\t\t\t\t\t\t\tmodule.addDependency(dep);\n\t\t\t\t\t\t\tif (singleClassSelector === undefined) singleClassSelector = name;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsingleClassSelector = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tleftParenthesis: (input, start, end) => {\n\t\t\t\tswitch (mode) {\n\t\t\t\t\tcase CSS_MODE_TOP_LEVEL: {\n\t\t\t\t\t\tmodeStack.push(false);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\trightParenthesis: (input, start, end) => {\n\t\t\t\tswitch (mode) {\n\t\t\t\t\tcase CSS_MODE_TOP_LEVEL: {\n\t\t\t\t\t\tif (awaitRightParenthesis) {\n\t\t\t\t\t\t\tawaitRightParenthesis = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst newModeData = modeStack.pop();\n\t\t\t\t\t\tif (newModeData !== false) {\n\t\t\t\t\t\t\tmodeData = newModeData;\n\t\t\t\t\t\t\tconst dep = new ConstDependency(\"\", [start, end]);\n\t\t\t\t\t\t\tmodule.addPresentationalDependency(dep);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tpseudoClass: (input, start, end) => {\n\t\t\t\tsingleClassSelector = false;\n\t\t\t\tswitch (mode) {\n\t\t\t\t\tcase CSS_MODE_TOP_LEVEL: {\n\t\t\t\t\t\tconst name = input.slice(start, end);\n\t\t\t\t\t\tif (this.allowModeSwitch && name === \":global\") {\n\t\t\t\t\t\t\tmodeData = \"global\";\n\t\t\t\t\t\t\tconst dep = new ConstDependency(\"\", [start, end]);\n\t\t\t\t\t\t\tmodule.addPresentationalDependency(dep);\n\t\t\t\t\t\t} else if (this.allowModeSwitch && name === \":local\") {\n\t\t\t\t\t\t\tmodeData = \"local\";\n\t\t\t\t\t\t\tconst dep = new ConstDependency(\"\", [start, end]);\n\t\t\t\t\t\t\tmodule.addPresentationalDependency(dep);\n\t\t\t\t\t\t} else if (this.allowPseudoBlocks && name === \":export\") {\n\t\t\t\t\t\t\tconst pos = parseExports(input, end);\n\t\t\t\t\t\t\tconst dep = new ConstDependency(\"\", [start, pos]);\n\t\t\t\t\t\t\tmodule.addPresentationalDependency(dep);\n\t\t\t\t\t\t\treturn pos;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tpseudoFunction: (input, start, end) => {\n\t\t\t\tswitch (mode) {\n\t\t\t\t\tcase CSS_MODE_TOP_LEVEL: {\n\t\t\t\t\t\tconst name = input.slice(start, end - 1);\n\t\t\t\t\t\tif (this.allowModeSwitch && name === \":global\") {\n\t\t\t\t\t\t\tmodeStack.push(modeData);\n\t\t\t\t\t\t\tmodeData = \"global\";\n\t\t\t\t\t\t\tconst dep = new ConstDependency(\"\", [start, end]);\n\t\t\t\t\t\t\tmodule.addPresentationalDependency(dep);\n\t\t\t\t\t\t} else if (this.allowModeSwitch && name === \":local\") {\n\t\t\t\t\t\t\tmodeStack.push(modeData);\n\t\t\t\t\t\t\tmodeData = \"local\";\n\t\t\t\t\t\t\tconst dep = new ConstDependency(\"\", [start, end]);\n\t\t\t\t\t\t\tmodule.addPresentationalDependency(dep);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tawaitRightParenthesis = true;\n\t\t\t\t\t\t\tmodeStack.push(false);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tfunction: (input, start, end) => {\n\t\t\t\tswitch (mode) {\n\t\t\t\t\tcase CSS_MODE_IN_LOCAL_RULE: {\n\t\t\t\t\t\tconst name = input.slice(start, end - 1);\n\t\t\t\t\t\tif (name === \"var\") {\n\t\t\t\t\t\t\tlet pos = walkCssTokens.eatWhitespaceAndComments(input, end);\n\t\t\t\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\t\t\t\tconst [newPos, name] = eatText(input, pos, eatNameInVar);\n\t\t\t\t\t\t\tif (!name.startsWith(\"--\")) return end;\n\t\t\t\t\t\t\tconst { line: sl, column: sc } = locConverter.get(pos);\n\t\t\t\t\t\t\tconst { line: el, column: ec } = locConverter.get(newPos);\n\t\t\t\t\t\t\tconst dep = new CssSelfLocalIdentifierDependency(\n\t\t\t\t\t\t\t\tname.slice(2),\n\t\t\t\t\t\t\t\t[pos, newPos],\n\t\t\t\t\t\t\t\t\"--\",\n\t\t\t\t\t\t\t\tdeclaredCssVariables\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tdep.setLoc(sl, sc, el, ec);\n\t\t\t\t\t\t\tmodule.addDependency(dep);\n\t\t\t\t\t\t\treturn newPos;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tcomma: (input, start, end) => {\n\t\t\t\tswitch (mode) {\n\t\t\t\t\tcase CSS_MODE_TOP_LEVEL:\n\t\t\t\t\t\tif (!awaitRightParenthesis) {\n\t\t\t\t\t\t\tmodeData = undefined;\n\t\t\t\t\t\t\tmodeStack.length = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CSS_MODE_IN_LOCAL_RULE:\n\t\t\t\t\t\tprocessDeclarationValueDone(input, start);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t}\n\t\t});\n\n\t\tmodule.buildInfo.strict = true;\n\t\tmodule.buildMeta.exportsType = \"namespace\";\n\t\tmodule.addDependency(new StaticExportsDependency([], true));\n\t\treturn state;\n\t}\n}\n\nmodule.exports = CssParser;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}