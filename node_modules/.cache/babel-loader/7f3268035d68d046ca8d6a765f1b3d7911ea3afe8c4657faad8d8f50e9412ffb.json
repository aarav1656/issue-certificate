{"ast":null,"code":"import _regeneratorRuntime from\"/home/aarav/Desktop/tut/certificate2/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/home/aarav/Desktop/tut/certificate2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{ethers}from\"ethers\";import NFTMinter from\"./Nft-Minter.json\";export function connectWallet(){return _connectWallet.apply(this,arguments);}function _connectWallet(){_connectWallet=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var provider,signer,contract;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return window.ethereum.request({method:\"eth_requestAccounts\"});case 2:provider=new ethers.providers.Web3Provider(window.ethereum);signer=provider.getSigner();contract=new ethers.Contract(\"0xDceBF6170eF32D0E7cBb8BE8D46240e7a95b0A43\",// Paste your Deployed NFT contract address\nNFTMinter.abi,signer);return _context.abrupt(\"return\",{signer:signer,contract:contract});case 6:case\"end\":return _context.stop();}},_callee);}));return _connectWallet.apply(this,arguments);}export function connectMetaMask(){return _connectMetaMask.apply(this,arguments);}function _connectMetaMask(){_connectMetaMask=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var _yield$connectWallet,signer,address,balance,formattedBalance;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.next=2;return connectWallet();case 2:_yield$connectWallet=_context2.sent;signer=_yield$connectWallet.signer;_context2.next=6;return signer.getAddress();case 6:address=_context2.sent;_context2.next=9;return signer.getBalance();case 9:balance=_context2.sent;formattedBalance=ethers.utils.formatEther(balance);return _context2.abrupt(\"return\",{address:address,formattedBalance:formattedBalance});case 12:case\"end\":return _context2.stop();}},_callee2);}));return _connectMetaMask.apply(this,arguments);}","map":{"version":3,"names":["ethers","NFTMinter","connectWallet","_connectWallet","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","provider","signer","contract","wrap","_callee$","_context","prev","next","window","ethereum","request","method","providers","Web3Provider","getSigner","Contract","abi","abrupt","stop","connectMetaMask","_connectMetaMask","_callee2","_yield$connectWallet","address","balance","formattedBalance","_callee2$","_context2","sent","getAddress","getBalance","utils","formatEther"],"sources":["/home/aarav/Desktop/tut/certificate2/src/connectWallet.js"],"sourcesContent":["import { ethers } from \"ethers\";\nimport NFTMinter from \"./Nft-Minter.json\";\n\nexport async function connectWallet() {\n  await window.ethereum.request({ method: \"eth_requestAccounts\" });\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\n  const signer = provider.getSigner();\n\n  const contract = new ethers.Contract(\n    \"0xDceBF6170eF32D0E7cBb8BE8D46240e7a95b0A43\", // Paste your Deployed NFT contract address\n    NFTMinter.abi,\n    signer\n  );\n\n  return { signer, contract };\n}\n\nexport async function connectMetaMask() {\n  const { signer } = await connectWallet();\n  const address = await signer.getAddress();\n  const balance = await signer.getBalance();\n  const formattedBalance = ethers.utils.formatEther(balance);\n  return { address, formattedBalance };\n}\n"],"mappings":"oQAAA,OAASA,MAAM,KAAQ,QAAQ,CAC/B,MAAO,CAAAC,SAAS,KAAM,mBAAmB,CAEzC,eAAsB,CAAAC,aAAaA,CAAA,SAAAC,cAAA,CAAAC,KAAA,MAAAC,SAAA,GAYlC,SAAAF,eAAA,EAAAA,cAAA,CAAAG,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAZM,SAAAC,QAAA,MAAAC,QAAA,CAAAC,MAAA,CAAAC,QAAA,QAAAL,mBAAA,GAAAM,IAAA,UAAAC,SAAAC,QAAA,iBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SAAAF,QAAA,CAAAE,IAAA,SACC,CAAAC,MAAM,CAACC,QAAQ,CAACC,OAAO,CAAC,CAAEC,MAAM,CAAE,qBAAsB,CAAC,CAAC,QAC1DX,QAAQ,CAAG,GAAI,CAAAV,MAAM,CAACsB,SAAS,CAACC,YAAY,CAACL,MAAM,CAACC,QAAQ,CAAC,CAC7DR,MAAM,CAAGD,QAAQ,CAACc,SAAS,EAAE,CAE7BZ,QAAQ,CAAG,GAAI,CAAAZ,MAAM,CAACyB,QAAQ,CAClC,4CAA4C,CAAE;AAC9CxB,SAAS,CAACyB,GAAG,CACbf,MAAM,CACP,QAAAI,QAAA,CAAAY,MAAA,UAEM,CAAEhB,MAAM,CAANA,MAAM,CAAEC,QAAQ,CAARA,QAAS,CAAC,0BAAAG,QAAA,CAAAa,IAAA,MAAAnB,OAAA,GAC5B,UAAAN,cAAA,CAAAC,KAAA,MAAAC,SAAA,GAED,eAAsB,CAAAwB,eAAeA,CAAA,SAAAC,gBAAA,CAAA1B,KAAA,MAAAC,SAAA,GAMpC,SAAAyB,iBAAA,EAAAA,gBAAA,CAAAxB,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CANM,SAAAuB,SAAA,MAAAC,oBAAA,CAAArB,MAAA,CAAAsB,OAAA,CAAAC,OAAA,CAAAC,gBAAA,QAAA5B,mBAAA,GAAAM,IAAA,UAAAuB,UAAAC,SAAA,iBAAAA,SAAA,CAAArB,IAAA,CAAAqB,SAAA,CAAApB,IAAA,SAAAoB,SAAA,CAAApB,IAAA,SACoB,CAAAf,aAAa,EAAE,QAAA8B,oBAAA,CAAAK,SAAA,CAAAC,IAAA,CAAhC3B,MAAM,CAAAqB,oBAAA,CAANrB,MAAM,CAAA0B,SAAA,CAAApB,IAAA,SACQ,CAAAN,MAAM,CAAC4B,UAAU,EAAE,QAAnCN,OAAO,CAAAI,SAAA,CAAAC,IAAA,CAAAD,SAAA,CAAApB,IAAA,SACS,CAAAN,MAAM,CAAC6B,UAAU,EAAE,QAAnCN,OAAO,CAAAG,SAAA,CAAAC,IAAA,CACPH,gBAAgB,CAAGnC,MAAM,CAACyC,KAAK,CAACC,WAAW,CAACR,OAAO,CAAC,QAAAG,SAAA,CAAAV,MAAA,UACnD,CAAEM,OAAO,CAAPA,OAAO,CAAEE,gBAAgB,CAAhBA,gBAAiB,CAAC,2BAAAE,SAAA,CAAAT,IAAA,MAAAG,QAAA,GACrC,UAAAD,gBAAA,CAAA1B,KAAA,MAAAC,SAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}